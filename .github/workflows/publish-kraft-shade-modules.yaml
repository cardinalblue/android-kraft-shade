name: Publish kraft-shade Modules
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version number to publish (format: x.x.x). If not provided, will auto-increment patch version."
        required: false
        type: string
      run_tests:
        description: "Run tests before publishing"
        required: true
        type: boolean
        default: false

env:
  GITHUB_TOKEN: ${{ secrets.PUBLISH_GH_TOKEN }}
  INITIAL_VERSION: 1.0.0

jobs:
  publish:
    name: Publish kraft-shade Modules
    runs-on: ubuntu-latest
    environment: kraft-shade-publish
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
          submodules-depth: 1
          nested-submodules: true
          token: ${{ secrets.PUBLISH_GH_TOKEN }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Test
        if: ${{ inputs.run_tests == true }}
        run: ./gradlew test
        
      - name: Setup credentials in local.properties
        run: echo "github.personalAccessToken=${{ secrets.PUBLISH_GH_TOKEN }}" >> local.properties

      - name: Resolve version
        run: |
          if [ -n "${{ inputs.version }}" ]; then
            # Use user-provided version
            VERSION="${{ inputs.version }}"
            echo "Using provided version: $VERSION"
          else
            # Auto-increment patch version based on latest tag
            PREVIOUS_VERSION=$(git tag | grep -E "^[0-9]+\.[0-9]+\.[0-9]+$" | sort -V | tail -1 || echo '')
            
            if [ -z "$PREVIOUS_VERSION" ]; then
              VERSION=${{ env.INITIAL_VERSION }}
            else
              # Increment patch version
              VERSION=$(echo $PREVIOUS_VERSION | awk -F. -v OFS=. '{$3+=1; print}')
            fi
            
            echo "Previous version: $PREVIOUS_VERSION"
            echo "Auto-incremented version: $VERSION"
          fi
          
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Add tag for release
        run: |
          git tag "$VERSION"
          git push https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git "$VERSION"

      # Step 1: Publish kraft-shade
      - name: Publish kraft-shade
        run: |
          echo "Publishing kraft-shade version: $VERSION"
          export MAVEN_PACKAGE_VERSION=$VERSION
          ./gradlew :kraft-shade:publish

      # Step 2: Update TOML file to use the newly built kraft-shade
      - name: Update TOML file with new kraft-shade version
        run: |
          # Update the TOML file to use the new kraft-shade version
          sed -i "s/kraftshade = { group = \"com.cardinalblue\", name = \"kraftshade\", version = \"[^\"]*\" }/kraftshade = { group = \"com.cardinalblue\", name = \"kraftshade\", version = \"$VERSION\" }/" gradle/libs.versions.toml
          cat gradle/libs.versions.toml

      # Step 3: Publish kraft-shade-compose
      - name: Publish kraft-shade-compose
        run: |
          echo "Publishing kraft-shade-compose version: $VERSION"
          export MAVEN_PACKAGE_VERSION=$VERSION
          ./gradlew :kraft-shade-compose:publish

      # Step 4: Update TOML file to use the newly built kraft-shade-compose
      - name: Update TOML file with new kraft-shade-compose version
        run: |
          # Update the TOML file to use the new kraft-shade-compose version
          sed -i "s/kraftshade-compose = { group = \"com.cardinalblue\", name = \"kraftshade-compose\", version = \"[^\"]*\" }/kraftshade-compose = { group = \"com.cardinalblue\", name = \"kraftshade-compose\", version = \"$VERSION\" }/" gradle/libs.versions.toml
          cat gradle/libs.versions.toml

      # Step 5: Commit and push the TOML file changes
      - name: Commit and push TOML changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add gradle/libs.versions.toml
          git commit -m "Update kraftshade and kraftshade-compose versions to $VERSION"
          git push https://${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
