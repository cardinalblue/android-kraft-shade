"use strict";(self.webpackChunkdoc_website=self.webpackChunkdoc_website||[]).push([[4722],{1220:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"built-in-shaders/color-effects","title":"Color Effects","description":"Color effects in KraftShade allow you to manipulate the color properties of images, enabling a wide range of adjustments from basic brightness and contrast to advanced color grading.","source":"@site/docs/built-in-shaders/color-effects.md","sourceDirName":"built-in-shaders","slug":"/built-in-shaders/color-effects","permalink":"/android-kraft-shade/docs/built-in-shaders/color-effects","draft":false,"unlisted":false,"editUrl":"https://github.com/cardinalblue/android-kraft-shade/tree/main/doc_website/docs/built-in-shaders/color-effects.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Base Shaders","permalink":"/android-kraft-shade/docs/built-in-shaders/base-shaders"},"next":{"title":"Alpha & Transparency Effects","permalink":"/android-kraft-shade/docs/built-in-shaders/alpha-transparency-effects"}}');var r=i(4848),l=i(8453);const a={sidebar_position:2},t="Color Effects",d={},o=[{value:"Overview",id:"overview",level:2},{value:"Basic Color Adjustments",id:"basic-color-adjustments",level:2},{value:"BrightnessKraftShader",id:"brightnesskraftshader",level:3},{value:"ContrastKraftShader",id:"contrastkraftshader",level:3},{value:"SaturationKraftShader",id:"saturationkraftshader",level:3},{value:"HueKraftShader",id:"huekraftshader",level:3},{value:"Color Conversion",id:"color-conversion",level:2},{value:"GrayscaleKraftShader",id:"grayscalekraftshader",level:3},{value:"SepiaToneKraftShader",id:"sepiatonekraftshader",level:3},{value:"MonochromeKraftShader",id:"monochromekraftshader",level:3},{value:"ColorInvertKraftShader",id:"colorinvertkraftshader",level:3},{value:"Advanced Color Adjustments",id:"advanced-color-adjustments",level:2},{value:"ColorMatrixKraftShader",id:"colormatrixkraftshader",level:3},{value:"ColorBalanceKraftShader",id:"colorbalancekraftshader",level:3},{value:"WhiteBalanceKraftShader",id:"whitebalancekraftshader",level:3},{value:"ExposureKraftShader",id:"exposurekraftshader",level:3},{value:"GammaKraftShader",id:"gammakraftshader",level:3},{value:"HighlightShadowKraftShader",id:"highlightshadowkraftshader",level:3},{value:"VibranceKraftShader",id:"vibrancekraftshader",level:3},{value:"RGBKraftShader",id:"rgbkraftshader",level:3},{value:"Color Grading",id:"color-grading",level:2},{value:"LevelsKraftShader",id:"levelskraftshader",level:3},{value:"LookUpTableKraftShader",id:"lookuptablekraftshader",level:3},{value:"Special Color Effects",id:"special-color-effects",level:2},{value:"SolarizeKraftShader",id:"solarizekraftshader",level:3},{value:"FalseColorKraftShader",id:"falsecolorkraftshader",level:3},{value:"Using Color Effects in Pipelines",id:"using-color-effects-in-pipelines",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"Related Topics",id:"related-topics",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"color-effects",children:"Color Effects"})}),"\n",(0,r.jsx)(n.p,{children:"Color effects in KraftShade allow you to manipulate the color properties of images, enabling a wide range of adjustments from basic brightness and contrast to advanced color grading."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Color manipulation is one of the most common image processing operations. KraftShade provides a comprehensive set of color effect shaders that can be used individually or combined to achieve sophisticated color grading and correction."}),"\n",(0,r.jsx)(n.h2,{id:"basic-color-adjustments",children:"Basic Color Adjustments"}),"\n",(0,r.jsx)(n.h3,{id:"brightnesskraftshader",children:"BrightnessKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the brightness of an image by adding a constant value to each color channel."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"brightness"}),": Float value controlling the brightness adjustment (default: 0f)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Positive values increase brightness"}),"\n",(0,r.jsx)(n.li,{children:"Negative values decrease brightness"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Correcting underexposed or overexposed images"}),"\n",(0,r.jsx)(n.li,{children:"Enhancing visibility in dark areas"}),"\n",(0,r.jsx)(n.li,{children:"Creating high-key or low-key effects"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: BrightnessKraftShader - Left side shows original image, right side shows image with increased brightness]"}),"\n",(0,r.jsx)(n.h3,{id:"contrastkraftshader",children:"ContrastKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the contrast of an image by scaling the color values around a midpoint."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"contrast"}),": Float value controlling the contrast adjustment (default: 1.2f)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Values > 1.0 increase contrast"}),"\n",(0,r.jsx)(n.li,{children:"Values < 1.0 decrease contrast"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enhancing details in flat images"}),"\n",(0,r.jsx)(n.li,{children:"Creating dramatic or muted looks"}),"\n",(0,r.jsx)(n.li,{children:"Improving visibility of textures"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: ContrastKraftShader - Left side shows original image, right side shows image with increased contrast]"}),"\n",(0,r.jsx)(n.h3,{id:"saturationkraftshader",children:"SaturationKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the saturation of an image, controlling the intensity of colors."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"saturation"}),": Float value controlling the saturation adjustment (default: 0f)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Values > 0.0 increase saturation"}),"\n",(0,r.jsx)(n.li,{children:"Values < 0.0 decrease saturation"}),"\n",(0,r.jsx)(n.li,{children:"Value of 0.0 has no effect"}),"\n",(0,r.jsx)(n.li,{children:"Value of -1.0 produces grayscale"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enhancing or muting colors"}),"\n",(0,r.jsx)(n.li,{children:"Creating vibrant or subdued looks"}),"\n",(0,r.jsx)(n.li,{children:"Preparing images for specific media"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: SaturationKraftShader - Left side shows original image, right side shows image with increased saturation]"}),"\n",(0,r.jsx)(n.h3,{id:"huekraftshader",children:"HueKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the hue of an image, shifting all colors around the color wheel."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"hue"}),": Float value controlling the hue rotation in degrees (default: 90f)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Range: 0 to 360 degrees"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Creating color variations"}),"\n",(0,r.jsx)(n.li,{children:"Artistic color transformations"}),"\n",(0,r.jsx)(n.li,{children:"Matching specific color schemes"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: HueKraftShader - Left side shows original image, right side shows image with hue shifted by 90 degrees]"}),"\n",(0,r.jsx)(n.h2,{id:"color-conversion",children:"Color Conversion"}),"\n",(0,r.jsx)(n.h3,{id:"grayscalekraftshader",children:"GrayscaleKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Converts an image to grayscale while preserving luminance."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Creating black and white images"}),"\n",(0,r.jsx)(n.li,{children:"Preparing for edge detection"}),"\n",(0,r.jsx)(n.li,{children:"Reducing visual complexity"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: GrayscaleKraftShader - Left side shows original color image, right side shows grayscale version]"}),"\n",(0,r.jsx)(n.h3,{id:"sepiatonekraftshader",children:"SepiaToneKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Applies a sepia tone effect to create a vintage, brownish appearance."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"intensity"}),": Float value controlling the strength of the sepia effect (default: 1.0f)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Creating vintage or aged photo effects"}),"\n",(0,r.jsx)(n.li,{children:"Adding warmth to images"}),"\n",(0,r.jsx)(n.li,{children:"Stylistic transformations"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: SepiaToneKraftShader - Left side shows original image, right side shows sepia-toned version]"}),"\n",(0,r.jsx)(n.h3,{id:"monochromekraftshader",children:"MonochromeKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Converts an image to monochrome (black and white) with adjustable intensity."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"intensity"}),": Float value controlling the strength of the monochrome effect (default: 1.0f)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Creating high-contrast black and white images"}),"\n",(0,r.jsx)(n.li,{children:"Artistic stylization"}),"\n",(0,r.jsx)(n.li,{children:"Focusing on form rather than color"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: MonochromeKraftShader - Left side shows original image, right side shows monochrome version]"}),"\n",(0,r.jsx)(n.h3,{id:"colorinvertkraftshader",children:"ColorInvertKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Inverts all colors in the image (similar to a photographic negative)."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Creating negative effects"}),"\n",(0,r.jsx)(n.li,{children:"Artistic stylization"}),"\n",(0,r.jsx)(n.li,{children:"Enhancing visibility of certain details"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: ColorInvertKraftShader - Left side shows original image, right side shows color-inverted version]"}),"\n",(0,r.jsx)(n.h2,{id:"advanced-color-adjustments",children:"Advanced Color Adjustments"}),"\n",(0,r.jsx)(n.h3,{id:"colormatrixkraftshader",children:"ColorMatrixKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Applies a 4x4 color matrix transformation to the image, allowing for sophisticated color manipulations."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"intensity"}),": Float value controlling the strength of the effect (default: 1.0f)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"colorMatrix"}),": FloatArray (16 elements) representing a 4x4 color transformation matrix"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"colorOffset"}),": FloatArray (4 elements) representing RGBA color offsets"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Custom color transformations"}),"\n",(0,r.jsx)(n.li,{children:"Implementing specific color filters"}),"\n",(0,r.jsx)(n.li,{children:"Creating complex color effects"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: ColorMatrixKraftShader - Left side shows original image, right side shows image with custom color matrix applied]"}),"\n",(0,r.jsx)(n.h3,{id:"colorbalancekraftshader",children:"ColorBalanceKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the color balance of an image by modifying the shadows, midtones, and highlights separately."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"shadows"}),": FloatArray (3 elements) controlling RGB adjustments for shadows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"midtones"}),": FloatArray (3 elements) controlling RGB adjustments for midtones"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"highlights"}),": FloatArray (3 elements) controlling RGB adjustments for highlights"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"preserveLuminosity"}),": Boolean determining whether to preserve brightness (default: true)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Professional color grading"}),"\n",(0,r.jsx)(n.li,{children:"Correcting color casts"}),"\n",(0,r.jsx)(n.li,{children:"Creating specific color moods"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: ColorBalanceKraftShader - Left side shows original image, right side shows image with adjusted color balance]"}),"\n",(0,r.jsx)(n.h3,{id:"whitebalancekraftshader",children:"WhiteBalanceKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the white balance of an image by modifying the temperature and tint."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"temperature"}),": Float value representing color temperature in Kelvin (default: 5000.0f)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tint"}),": Float value controlling green-magenta tint adjustment (default: 0.0f)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Correcting color temperature"}),"\n",(0,r.jsx)(n.li,{children:"Matching lighting conditions"}),"\n",(0,r.jsx)(n.li,{children:"Creating warm or cool atmospheres"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: WhiteBalanceKraftShader - Left side shows original image, right side shows image with adjusted white balance]"}),"\n",(0,r.jsx)(n.h3,{id:"exposurekraftshader",children:"ExposureKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the exposure of an image, simulating the effect of changing camera exposure."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"exposure"}),": Float value controlling the exposure adjustment (default: 0f)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Positive values increase exposure"}),"\n",(0,r.jsx)(n.li,{children:"Negative values decrease exposure"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Correcting exposure issues"}),"\n",(0,r.jsx)(n.li,{children:"Creating high-key or low-key effects"}),"\n",(0,r.jsx)(n.li,{children:"Simulating different lighting conditions"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: ExposureKraftShader - Left side shows original image, right side shows image with adjusted exposure]"}),"\n",(0,r.jsx)(n.h3,{id:"gammakraftshader",children:"GammaKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the gamma of an image, affecting the midtones while preserving blacks and whites."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gamma"}),": Float value controlling the gamma adjustment (default: 1f)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Values > 1.0 lighten midtones"}),"\n",(0,r.jsx)(n.li,{children:"Values < 1.0 darken midtones"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Correcting display gamma"}),"\n",(0,r.jsx)(n.li,{children:"Adjusting midtone brightness"}),"\n",(0,r.jsx)(n.li,{children:"Enhancing details in shadows or highlights"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: GammaKraftShader - Left side shows original image, right side shows image with adjusted gamma]"}),"\n",(0,r.jsx)(n.h3,{id:"highlightshadowkraftshader",children:"HighlightShadowKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the highlights and shadows of an image independently."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"shadows"}),": Float value controlling shadow adjustment (default: 0.0f)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Values > 0.0 lighten shadows"}),"\n",(0,r.jsx)(n.li,{children:"Values < 0.0 darken shadows"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"highlights"}),": Float value controlling highlight adjustment (default: 1.0f)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Values < 1.0 darken highlights"}),"\n",(0,r.jsx)(n.li,{children:"Values > 1.0 lighten highlights"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Recovering details in shadows and highlights"}),"\n",(0,r.jsx)(n.li,{children:"Reducing contrast while preserving detail"}),"\n",(0,r.jsx)(n.li,{children:"Creating HDR-like effects"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: HighlightShadowKraftShader - Left side shows original image, right side shows image with adjusted highlights and shadows]"}),"\n",(0,r.jsx)(n.h3,{id:"vibrancekraftshader",children:"VibranceKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the vibrance of an image, increasing saturation while preserving skin tones."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"vibrance"}),": Float value controlling the vibrance adjustment (default: 0f)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Positive values increase vibrance"}),"\n",(0,r.jsx)(n.li,{children:"Negative values decrease vibrance"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enhancing colors without oversaturating skin tones"}),"\n",(0,r.jsx)(n.li,{children:"Creating vivid images for display"}),"\n",(0,r.jsx)(n.li,{children:"Improving dull images"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: VibranceKraftShader - Left side shows original image, right side shows image with increased vibrance]"}),"\n",(0,r.jsx)(n.h3,{id:"rgbkraftshader",children:"RGBKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the red, green, and blue channels of an image independently."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"red"}),": Float value controlling the red channel multiplier (default: 1.0f)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"green"}),": Float value controlling the green channel multiplier (default: 1.0f)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"blue"}),": Float value controlling the blue channel multiplier (default: 1.0f)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Color correction"}),"\n",(0,r.jsx)(n.li,{children:"Creating color casts"}),"\n",(0,r.jsx)(n.li,{children:"Artistic color effects"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: RGBKraftShader - Left side shows original image, right side shows image with adjusted RGB channels]"}),"\n",(0,r.jsx)(n.h2,{id:"color-grading",children:"Color Grading"}),"\n",(0,r.jsx)(n.h3,{id:"levelskraftshader",children:"LevelsKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Adjusts the levels of an image, allowing for precise control over shadows, midtones, and highlights."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"levelMinimum"}),": GlFloatArray controlling RGB minimum input levels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"levelMiddle"}),": GlFloatArray controlling RGB gamma values"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"levelMaximum"}),": GlFloatArray controlling RGB maximum input levels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"minOutput"}),": GlFloatArray controlling RGB minimum output levels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"maxOutput"}),": GlFloatArray controlling RGB maximum output levels"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Professional color grading"}),"\n",(0,r.jsx)(n.li,{children:"Optimizing image contrast"}),"\n",(0,r.jsx)(n.li,{children:"Correcting exposure issues"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: LevelsKraftShader - Left side shows original image, right side shows image with adjusted levels]"}),"\n",(0,r.jsx)(n.h3,{id:"lookuptablekraftshader",children:"LookUpTableKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Applies a color lookup table (LUT) to an image for sophisticated color grading."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"intensity"}),": Float value controlling the strength of the LUT effect (default: 1.0f)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Applying film-like color grading"}),"\n",(0,r.jsx)(n.li,{children:"Creating consistent color styles across multiple images"}),"\n",(0,r.jsx)(n.li,{children:"Implementing complex color transformations"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: LookUpTableKraftShader - Left side shows original image, middle shows LUT, right side shows image with LUT applied]"}),"\n",(0,r.jsx)(n.h2,{id:"special-color-effects",children:"Special Color Effects"}),"\n",(0,r.jsx)(n.h3,{id:"solarizekraftshader",children:"SolarizeKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Creates a solarize effect by inverting colors that exceed a threshold."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"threshold"}),": Float value controlling the solarization threshold (default: 0.5f)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Creating artistic effects"}),"\n",(0,r.jsx)(n.li,{children:"Simulating photographic solarization"}),"\n",(0,r.jsx)(n.li,{children:"Generating high-contrast images"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: SolarizeKraftShader - Left side shows original image, right side shows solarized version]"}),"\n",(0,r.jsx)(n.h3,{id:"falsecolorkraftshader",children:"FalseColorKraftShader"}),"\n",(0,r.jsx)(n.p,{children:"Maps grayscale luminance values to a gradient between two colors."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"firstColor"}),": FloatArray (3 elements) representing the RGB color for dark areas (default: black)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"secondColor"}),": FloatArray (3 elements) representing the RGB color for light areas (default: white)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Visualizing data"}),"\n",(0,r.jsx)(n.li,{children:"Creating thermal-like images"}),"\n",(0,r.jsx)(n.li,{children:"Artistic stylization"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"[IMAGE: FalseColorKraftShader - Left side shows original image, right side shows false-colored version]"}),"\n",(0,r.jsx)(n.h2,{id:"using-color-effects-in-pipelines",children:"Using Color Effects in Pipelines"}),"\n",(0,r.jsx)(n.p,{children:"Color effects can be combined to create sophisticated color grading pipelines. They are often used in sequence to build up a specific look or style."}),"\n",(0,r.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,r.jsx)(n.p,{children:"When working with color effects:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Most color effects are relatively inexpensive in terms of performance"}),"\n",(0,r.jsx)(n.li,{children:"Chaining multiple color effects can be more efficient than using separate passes"}),"\n",(0,r.jsx)(n.li,{children:"Consider using ColorMatrixKraftShader to combine multiple simple color adjustments into a single operation"}),"\n",(0,r.jsx)(n.li,{children:"LookUpTableKraftShader can be more expensive due to the additional texture lookup"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"related-topics",children:"Related Topics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./alpha-transparency-effects",children:"Alpha & Transparency Effects"}),": Learn about transparency manipulation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./blending-modes",children:"Blending Modes"}),": Understand how different layers can be combined"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../pipeline-dsl",children:"Pipeline DSL"}),": See how to combine shaders into complex effects"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var s=i(6540);const r={},l=s.createContext(r);function a(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);